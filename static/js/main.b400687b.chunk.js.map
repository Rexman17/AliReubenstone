{"version":3,"sources":["containers/ProjectsContainer.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["ProjectsContainer","react_default","a","createElement","className","id","target","rel","href","React","Component","Header","dist_default","text","eraseDelay","speed","Icon","name","size","aria-hidden","containers_ProjectsContainer","App","components_Header","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b400687b.chunk.js","sourcesContent":["import React from 'react';\n// import ProjectsList from '../components/ProjectsList'\n// import { Button } from 'semantic-ui-react'\n\nclass ProjectsContainer extends React.Component {\n\n  render() {\n   return (\n     <div className=\"container\">\n\n      <h2 id=\"projects-title\">\n        PROJECTS\n      </h2>\n\n      <div className=\"projects\">\n        <div className=\"project-container\">\n          <span className=\"project-header\">\n            <div className=\"title\">Packing Pal</div>\n            <div className=\"frameworks\">\n              <p>React</p>\n              <p>●</p>\n              <p>Redux</p>\n              <p>●</p>\n              <p>Rails</p>\n              <p>●</p>\n              <p>Cloudinary API</p>\n              <p>●</p>\n              <p>JWT Auth</p>\n              <p>●</p>\n              <p>Materialize CSS</p>\n            </div>\n          </span>\n          <p className=\"description\">\n            The easiest way to keep track of all of your personal items during the moving process.\n          </p>\n          <div className=\"links\">\n            <div>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://youtu.be/13ej9B7GjmY\">\n                DEMO\n              </a>\n            </div>\n            <div>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/Rexman17/moving_app_frontend\">\n                REPO\n              </a>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"project-container\">\n          <span className=\"project-header\">\n            <div className=\"title\">My Wish List</div>\n            <div className=\"frameworks\">\n              <p>React</p>\n              <p>●</p>\n              <p>Rails</p>\n              <p>●</p>\n              <p>React Router</p>\n              <p>●</p>\n              <p>Google React Maps</p>\n              <p>●</p>\n            </div>\n          </span>\n          <p className=\"description\">\n            A personalized wish list, complete with item pricing and store locations.\n          </p>\n          <div className=\"links\">\n            <div>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.youtube.com/watch?v=2dtJhSK0s0o&feature=youtu.be\">\n                DEMO\n              </a>\n            </div>\n            <div>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/Rexman17/Wish-List-React\">\n                REPO\n              </a>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"project-container\">\n          <span className=\"project-header\">\n            <div className=\"title\">Chipotluck</div>\n            <div className=\"frameworks\">\n              <p>Rails</p>\n              <p>●</p>\n              <p>PostgreSQL</p>\n              <p>●</p>\n              <p>Recipe Puppy API</p>\n            </div>\n          </span>\n          <p className=\"description\">\n            The best way to create or attend local potlucks and find recipes for your dishes.\n          </p>\n          <div className=\"links\">\n            <div>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://youtu.be/Phvk9ld_U5I\">DEMO</a>\n            </div>\n            <div>\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/Veraprot/Potluck\">REPO</a>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"blogs\">\n        <h2 id=\"blogs-title\">\n          BLOGS\n        </h2>\n      </div>\n\n    </div>\n   )\n }\n}\n\nexport default ProjectsContainer\n","import React from 'react';\nimport ReactTypingEffect from 'react-typing-effect';\nimport { Icon } from 'semantic-ui-react'\n// import { BrowserRouter as Link } from \"react-router-dom\";\n// import ScrollableAnchor from 'react-scrollable-anchor'\nimport ProjectsContainer from '../containers/ProjectsContainer'\n\nclass Header extends React.Component {\n\n\n  render () {\n    return (\n      <div>\n        <div className=\"header\">\n          <h1 id=\"my-name\">\n            ALI REUBENSTONE\n          </h1>\n          <div id=\"react-typing-effect\">\n            <ReactTypingEffect\n              text={[\"Full Stack Web Developer\", \"Former Actor\", \"Finance Grad\", \"Emory Alum\", \"Improv Lover\"]}\n              eraseDelay={100}\n              speed={100}\n            />\n          </div>\n            <h4 id=\"resume\">\n              <a className=\"icon\" href=\"https://drive.google.com/file/d/1gDm3SgYmzSwBVx8oMKHOHb0bHmZWYBuV/view?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">\n                View My Resume\n              </a>\n            </h4>\n            <span className=\"social-icons\">\n              <a href=\"https://www.linkedin.com/in/alireubenstone/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Icon name=\"linkedin\" size='big' aria-hidden=\"true\" />\n              </a>\n              <a href=\"https://github.com/Rexman17\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Icon name=\"github\" size='big' aria-hidden=\"true\" />\n              </a>\n              <a href=\"https://medium.com/@alireubenstone\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Icon name=\"medium\" size='big' aria-hidden=\"true\" />\n              </a>\n            </span>\n            <div id=\"down-arrow\">\n              <a href=\"#projects-title\" id=\"arrow-btn\">\n                <Icon name=\"arrow circle down\" size=\"big\"/>\n              </a>\n            </div>\n           </div>\n           <div>\n            <ProjectsContainer />\n           </div>\n          </div>\n    )\n  }\n\n}\n\nexport default Header\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header'\n// import ProjectsContainer from './containers/ProjectsContainer'\n// import { HashRouter } from 'react-router-dom'\n\n\nclass App extends React.Component {\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Header />\n\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}